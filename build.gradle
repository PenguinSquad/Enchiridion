buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "http://tehnut.info/maven" }
    maven { url "http://dvs1.progwml6.com/files/maven" }
    maven { url "http://maven.blamejared.com" }
}

ext.buildnumber=""
if (System.getenv().BUILD_NUMBER) {
    ext.buildnumber = "-" + System.getenv().BUILD_NUMBER
}

version = "${minecraft_version}-${mod_version}${buildnumber}"
group= "uk.joshiejack.enchiridion"
archivesBaseName = "Enchiridion"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"

    replace "@VERSION@", "${mod_version}"
    replaceIn "EInfo.java"
}

dependencies {
    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    deobfCompile "info.amerifrance.guideapi:Guide-API:1.11.2-${guideapi_version}"
    //deobfCompile "MineTweaker3:MineTweaker3-API:${minetweaker_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = ''
    manifest {
        attributes 'FMLAT': 'enchiridion_at.cfg'
    }
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId 'Enchiridion'
            artifact jar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

idea { module { inheritOutputDirs = true } }